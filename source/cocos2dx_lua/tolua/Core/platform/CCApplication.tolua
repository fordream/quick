
enum
{
    kTargetWindows,
    kTargetLinux,
    kTargetMacOS,
    kTargetAndroid,
    kTargetIphone,
    kTargetIpad,
    kTargetBlackBerry,
    kTargetNaCl,
    kTargetEmscripten,
    kTargetTizen
};

/**
 * @addtogroup platform
 * @{
 */

class CCApplication
{
    /**
    @brief  Get current applicaiton instance.
    @return Current application instance pointer.
    */
    static CCApplication* sharedApplication();

    /**
    @brief    Callback by CCDirector for limit FPS.
    @interval       The time, expressed in seconds, between current frame and next.
    */
    void setAnimationInterval(double interval);

    /**
    @brief Get current language config
    @return Current language config
    */
    int getCurrentLanguage();

    /**
     @brief Get target platform
     */
    int getTargetPlatform();

    bool isIOS64bit();
};

// end of platform group
/// @}

${
#define TOLUA_DISABLE_tolua_Core_CCApplication_isIOS64bit00
static int tolua_Core_CCApplication_isIOS64bit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
    tolua_Error tolua_err;
    if (
        !tolua_isusertype(tolua_S,1,"CCApplication",0,&tolua_err) ||
        !tolua_isnoobj(tolua_S,2,&tolua_err)
        )
        goto tolua_lerror;
    else
#endif
    {
        CCApplication* self = (CCApplication*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
        if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
        bool isIOS64bit = false;
        TargetPlatform platform = cocos2d::CCApplication::sharedApplication()->getTargetPlatform();
        if (kTargetIphone == platform || kTargetIpad == platform)
        {
#if defined(__LP64__)
            isIOS64bit = true;
#endif
        }
        tolua_pushboolean(tolua_S, isIOS64bit);
        return 1;
    }
#ifndef TOLUA_RELEASE
tolua_lerror:
    tolua_error(tolua_S,"#ferror in function 'isIOS64bit'.",&tolua_err);
    return 0;
#endif
}
$}